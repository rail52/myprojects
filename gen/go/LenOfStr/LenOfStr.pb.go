// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: LenOfStr/LenOfStr.proto

package LenOfStr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StrRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Str           string                 `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StrRequest) Reset() {
	*x = StrRequest{}
	mi := &file_LenOfStr_LenOfStr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrRequest) ProtoMessage() {}

func (x *StrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LenOfStr_LenOfStr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrRequest.ProtoReflect.Descriptor instead.
func (*StrRequest) Descriptor() ([]byte, []int) {
	return file_LenOfStr_LenOfStr_proto_rawDescGZIP(), []int{0}
}

func (x *StrRequest) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

type LenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Len           int64                  `protobuf:"varint,1,opt,name=Len,proto3" json:"Len,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LenResponse) Reset() {
	*x = LenResponse{}
	mi := &file_LenOfStr_LenOfStr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LenResponse) ProtoMessage() {}

func (x *LenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_LenOfStr_LenOfStr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LenResponse.ProtoReflect.Descriptor instead.
func (*LenResponse) Descriptor() ([]byte, []int) {
	return file_LenOfStr_LenOfStr_proto_rawDescGZIP(), []int{1}
}

func (x *LenResponse) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

var File_LenOfStr_LenOfStr_proto protoreflect.FileDescriptor

const file_LenOfStr_LenOfStr_proto_rawDesc = "" +
	"\n" +
	"\x17LenOfStr/LenOfStr.proto\x12\aexample\"\x1e\n" +
	"\n" +
	"StrRequest\x12\x10\n" +
	"\x03Str\x18\x01 \x01(\tR\x03Str\"\x1f\n" +
	"\vLenResponse\x12\x10\n" +
	"\x03Len\x18\x01 \x01(\x03R\x03Len2@\n" +
<<<<<<< HEAD
	"\aCompute\x125\n" +
=======
	"\aGreeter\x125\n" +
>>>>>>> whatever
	"\x06StrLen\x12\x13.example.StrRequest\x1a\x14.example.LenResponse\"\x00B'Z%github.com/rail52/myprojects/LenOfStrb\x06proto3"

var (
	file_LenOfStr_LenOfStr_proto_rawDescOnce sync.Once
	file_LenOfStr_LenOfStr_proto_rawDescData []byte
)

func file_LenOfStr_LenOfStr_proto_rawDescGZIP() []byte {
	file_LenOfStr_LenOfStr_proto_rawDescOnce.Do(func() {
		file_LenOfStr_LenOfStr_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_LenOfStr_LenOfStr_proto_rawDesc), len(file_LenOfStr_LenOfStr_proto_rawDesc)))
	})
	return file_LenOfStr_LenOfStr_proto_rawDescData
}

var file_LenOfStr_LenOfStr_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_LenOfStr_LenOfStr_proto_goTypes = []any{
	(*StrRequest)(nil),  // 0: example.StrRequest
	(*LenResponse)(nil), // 1: example.LenResponse
}
var file_LenOfStr_LenOfStr_proto_depIdxs = []int32{
<<<<<<< HEAD
	0, // 0: example.Compute.StrLen:input_type -> example.StrRequest
	1, // 1: example.Compute.StrLen:output_type -> example.LenResponse
=======
	0, // 0: example.Greeter.StrLen:input_type -> example.StrRequest
	1, // 1: example.Greeter.StrLen:output_type -> example.LenResponse
>>>>>>> whatever
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_LenOfStr_LenOfStr_proto_init() }
func file_LenOfStr_LenOfStr_proto_init() {
	if File_LenOfStr_LenOfStr_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_LenOfStr_LenOfStr_proto_rawDesc), len(file_LenOfStr_LenOfStr_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_LenOfStr_LenOfStr_proto_goTypes,
		DependencyIndexes: file_LenOfStr_LenOfStr_proto_depIdxs,
		MessageInfos:      file_LenOfStr_LenOfStr_proto_msgTypes,
	}.Build()
	File_LenOfStr_LenOfStr_proto = out.File
	file_LenOfStr_LenOfStr_proto_goTypes = nil
	file_LenOfStr_LenOfStr_proto_depIdxs = nil
}
